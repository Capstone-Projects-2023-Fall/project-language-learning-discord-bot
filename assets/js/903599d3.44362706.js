"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[1758],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,g=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(g,a(a({ref:t},p),{},{components:r})):n.createElement(g,a({ref:t},p))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8531:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const i={sidebar_position:2},a="Component Descriptions",s={unversionedId:"system-architecture/component-descriptions",id:"system-architecture/component-descriptions",title:"Component Descriptions",description:"A description of the different components and their interfaces. See the System Block Diagram for a visualization of how these components interact.",source:"@site/docs/system-architecture/component-descriptions.md",sourceDirName:"system-architecture",slug:"/system-architecture/component-descriptions",permalink:"/project-language-learning-discord-bot/docs/system-architecture/component-descriptions",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-language-learning-discord-bot/edit/main/documentation/docs/system-architecture/component-descriptions.md",tags:[],version:"current",lastUpdatedBy:"Michael Ewing",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"System Architecture",permalink:"/project-language-learning-discord-bot/docs/category/system-architecture"},next:{title:"Development Environment",permalink:"/project-language-learning-discord-bot/docs/system-architecture/development-environment"}},c={},l=[{value:"Discord API",id:"discord-api",level:2},{value:"Py-cord (Discord API Wrapper)",id:"py-cord-discord-api-wrapper",level:2},{value:"MongoDB",id:"mongodb",level:2},{value:"Language Bot",id:"language-bot",level:2},{value:"GTTS",id:"gtts",level:2},{value:"OpenAI",id:"openai",level:2}],p={toc:l};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"component-descriptions"},"Component Descriptions"),(0,o.kt)("p",null,"A description of the different components and their interfaces. See the ",(0,o.kt)("a",{parentName:"p",href:"https://capstone-projects-2023-fall.github.io/project-language-learning-discord-bot/docs/requirements/system-block-diagram"},"System Block Diagram")," for a visualization of how these components interact."),(0,o.kt)("h2",{id:"discord-api"},"Discord API"),(0,o.kt)("p",null,"An API that allows interactions with various features on Discord\nsuch as chatting and user authentication. We will use Discord's API\nto facilitate communication with users and receive commands. "),(0,o.kt)("h2",{id:"py-cord-discord-api-wrapper"},"Py-cord (Discord API Wrapper)"),(0,o.kt)("p",null,"A feature-rich Python library that is forked from discord.py.\nPy-cord encapsulates many Discord API calls for ease of use. "),(0,o.kt)("h2",{id:"mongodb"},"MongoDB"),(0,o.kt)("p",null,"A NoSQL database management system. We will use MongoDB to\nstore the user's selected language as well as current progress.\nAdditionally course materials including quizzes, flashcards,\nand more will be stored on a MongoDB database. "),(0,o.kt)("h2",{id:"language-bot"},"Language Bot"),(0,o.kt)("p",null,"Python program in charge of generating the language learning experience for\nusers. This includes displaying all course materials (units/quizzes/etc.) in the\nform of embeds and other message types within the Discord platform.  "),(0,o.kt)("h2",{id:"gtts"},"GTTS"),(0,o.kt)("p",null,"A Python library used to interface with Google Translate's text-to-speech API.\nGTTS will be used to vocalize lesson text for the learning bot to be\nused in listening comprehension. "),(0,o.kt)("h2",{id:"openai"},"OpenAI"),(0,o.kt)("p",null,"Python library which provides access to OpenAi's APIs. This project will\nmake use of OpenAi's Audio API trained on their automatic speech recognition\nsystem Whisper to transcribe user audio."))}d.isMDXComponent=!0}}]);